{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asist\\\\Desktop\\\\Master 2\\\\NoSQL\\\\Project\\\\Projet 1\\\\Books Dataset for Recommendation Systems and Chatbots\\\\work\\\\client\\\\src\\\\context\\\\ApiContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/ApiContext.js\nimport { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiContext = /*#__PURE__*/createContext();\nconst API_URL = 'http://127.0.0.1:3000';\nexport const ApiProvider = ({\n  children\n}) => {\n  _s();\n  const [apiData, setApiData] = useState([]);\n  const [apiDatas, setApiDatas] = useState([]);\n  const [apiYears, setBookYears] = useState([]);\n  const [apiAuthors, setBookAuthors] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const setCategory = useCallback(category => {\n    setSelectedCategory(category);\n  }, []);\n  const fetchData = async (endpoint, op) => {\n    try {\n      const response = await fetch(`${API_URL}/${endpoint}`);\n      const data = await response.json();\n      // Ensure data is always an array\n      if (op === 0) setApiData(Array.isArray(data) ? data : [data]);else if (op === 1) setBookYears(Array.isArray(data) ? data : [data]);else if (op === 2) setBookAuthors(Array.isArray(data) ? data : [data]);else setApiDatas(Array.isArray(data) ? data : [data]);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des données API', error);\n      if (op === 0) setApiData([]);else if (op === 1) setBookYears([]);else if (op === 2) setBookAuthors([]);else setApiDatas([]);\n    }\n  };\n  const postData = async (endpoint, formData, method) => {\n    try {\n      const response = await fetch(`${API_URL}/${endpoint}`, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      // Traitez la réponse si nécessaire\n      console.log('Données envoyées avec succès:', data);\n      return data;\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi des données:', error);\n      return [\"Erreur lors de l'envoi des données:, error\", error];\n    }\n  };\n  const deleteItem = async id => {\n    try {\n      // Envoyer la requête DELETE à votre API avec l'ID\n      await fetch(`${API_URL}/books/${id}`, {\n        method: 'DELETE'\n      });\n\n      // Mettre à jour l'état local (par exemple, en refetchant les données)\n      // selectFeature(selectedCategory);\n    } catch (error) {\n      console.error(`Erreur lors de la suppression de l'élément avec l'ID ${id}`, error);\n    }\n  };\n  const selectFeature = useCallback(feature => {\n    // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\n    const endpoint = feature === 'all' ? 'books' : `books/${feature}`;\n    fetchData(endpoint, 0);\n    setCategory(feature);\n  }, [setCategory]);\n  const getCategories = useCallback(() => {\n    // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\n    const endpoint = `books/categories`;\n    fetchData(endpoint, 3);\n  }, []);\n  const getYears = useCallback(() => {\n    // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\n    const endpoint = `books/years`;\n    fetchData(endpoint, 1);\n  }, []);\n  const getAuthors = useCallback(() => {\n    // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\n    const endpoint = `books/authors`;\n    fetchData(endpoint, 2);\n  }, []);\n  useEffect(() => {\n    selectFeature('all'); // Charger les données par défaut au montage\n    getYears();\n    getAuthors();\n    getCategories();\n  }, [getAuthors, getCategories, getYears, selectFeature]);\n  return /*#__PURE__*/_jsxDEV(ApiContext.Provider, {\n    value: {\n      apiData,\n      selectFeature,\n      apiDatas,\n      getCategories,\n      selectedCategory,\n      setCategory,\n      apiYears,\n      setBookYears,\n      getYears,\n      apiAuthors,\n      setBookAuthors,\n      getAuthors,\n      //\n      postData,\n      deleteItem\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(ApiProvider, \"w1GYLrFAm9QS0I9kg+NcaqZkUMs=\");\n_c = ApiProvider;\nexport const useApi = () => {\n  _s2();\n  return useContext(ApiContext);\n};\n_s2(useApi, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ApiProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","ApiContext","API_URL","ApiProvider","children","_s","apiData","setApiData","apiDatas","setApiDatas","apiYears","setBookYears","apiAuthors","setBookAuthors","selectedCategory","setSelectedCategory","setCategory","category","fetchData","endpoint","op","response","fetch","data","json","Array","isArray","error","console","postData","formData","method","headers","body","JSON","stringify","log","deleteItem","id","selectFeature","feature","getCategories","getYears","getAuthors","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApi","_s2","$RefreshReg$"],"sources":["C:/Users/asist/Desktop/Master 2/NoSQL/Project/Projet 1/Books Dataset for Recommendation Systems and Chatbots/work/client/src/context/ApiContext.js"],"sourcesContent":["// src/context/ApiContext.js\r\nimport { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\n\r\nconst ApiContext = createContext();\r\n\r\nconst API_URL = 'http://127.0.0.1:3000';\r\n\r\nexport const ApiProvider = ({ children }) => {\r\n    const [apiData, setApiData] = useState([]);\r\n    const [apiDatas, setApiDatas] = useState([]);\r\n    const [apiYears, setBookYears] = useState([]);\r\n    const [apiAuthors, setBookAuthors] = useState([]);\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n\r\n    const setCategory = useCallback((category) => {\r\n        setSelectedCategory(category);\r\n    }, []);\r\n\r\n    const fetchData = async (endpoint, op) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}/${endpoint}`);\r\n            const data = await response.json();\r\n            // Ensure data is always an array\r\n            if(op === 0)\r\n                setApiData(Array.isArray(data) ? data : [data]);\r\n            else if(op === 1)\r\n                setBookYears(Array.isArray(data) ? data : [data]);\r\n            else if(op === 2)\r\n                setBookAuthors(Array.isArray(data) ? data : [data]);\r\n            else\r\n                setApiDatas(Array.isArray(data) ? data : [data]);\r\n        } catch (error) {\r\n            console.error('Erreur lors de la récupération des données API', error);\r\n            if(op === 0 )\r\n                setApiData([]);\r\n            else if(op === 1 )\r\n                setBookYears([]);\r\n            else if(op === 2 )\r\n                setBookAuthors([]);\r\n            else \r\n                setApiDatas([]);\r\n        }\r\n    };\r\n\r\n    const postData = async (endpoint, formData, method) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}/${endpoint}`, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n            const data = await response.json();\r\n            // Traitez la réponse si nécessaire\r\n            console.log('Données envoyées avec succès:', data);\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Erreur lors de l\\'envoi des données:', error);\r\n            return [\r\n                \"Erreur lors de l'envoi des données:, error\", error\r\n            ];\r\n        }\r\n    };\r\n\r\n    const deleteItem = async (id) => {\r\n        try {\r\n            // Envoyer la requête DELETE à votre API avec l'ID\r\n            await fetch(`${API_URL}/books/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            // Mettre à jour l'état local (par exemple, en refetchant les données)\r\n            // selectFeature(selectedCategory);\r\n        } catch (error) {\r\n            console.error(`Erreur lors de la suppression de l'élément avec l'ID ${id}`, error);\r\n        }\r\n    };\r\n\r\n    const selectFeature = useCallback((feature) => {\r\n        // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\r\n        const endpoint = feature === 'all' ? 'books' : `books/${feature}`;\r\n        fetchData(endpoint, 0);\r\n        setCategory(feature);\r\n    }, [setCategory]);\r\n\r\n    const getCategories = useCallback(() => {\r\n        // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\r\n        const endpoint =`books/categories`;\r\n        fetchData(endpoint, 3);\r\n    }, []);\r\n\r\n    const getYears = useCallback(() => {\r\n        // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\r\n        const endpoint =`books/years`;\r\n        fetchData(endpoint, 1);\r\n    }, []);\r\n\r\n    const getAuthors = useCallback(() => {\r\n        // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\r\n        const endpoint =`books/authors`;\r\n        fetchData(endpoint, 2);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        selectFeature('all'); // Charger les données par défaut au montage\r\n        getYears();\r\n        getAuthors();\r\n        getCategories();\r\n    }, [getAuthors, getCategories, getYears, selectFeature]);\r\n\r\n    return (\r\n        <ApiContext.Provider value={{ \r\n            apiData, selectFeature, \r\n            apiDatas, getCategories, \r\n            selectedCategory, setCategory,\r\n            apiYears, setBookYears, getYears,\r\n            apiAuthors, setBookAuthors, getAuthors,\r\n            //\r\n            postData, deleteItem\r\n        }}>\r\n            {children}\r\n        </ApiContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useApi = () => useContext(ApiContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
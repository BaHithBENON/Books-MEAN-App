{"ast":null,"code":"// src/context/ApiContext.js\nimport{createContext,useContext,useState,useEffect,useCallback}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ApiContext=/*#__PURE__*/createContext();const API_URL='http://127.0.0.1:3000';const renderUrl='https://books-mean-app.onrender.com';export const ApiProvider=_ref=>{let{children}=_ref;const[apiData,setApiData]=useState([]);const[apiDatas,setApiDatas]=useState([]);const[apiYears,setBookYears]=useState([]);const[apiAuthors,setBookAuthors]=useState([]);const[selectedCategory,setSelectedCategory]=useState('');const setCategory=useCallback(category=>{setSelectedCategory(category);},[]);const fetchData=async(endpoint,op)=>{try{const response=await fetch(\"\".concat(renderUrl,\"/\").concat(endpoint));const data=await response.json();// Ensure data is always an array\nif(op===0)setApiData(Array.isArray(data)?data:[data]);else if(op===1)setBookYears(Array.isArray(data)?data:[data]);else if(op===2)setBookAuthors(Array.isArray(data)?data:[data]);else setApiDatas(Array.isArray(data)?data:[data]);}catch(error){console.error('Erreur lors de la récupération des données API',error);if(op===0)setApiData([]);else if(op===1)setBookYears([]);else if(op===2)setBookAuthors([]);else setApiDatas([]);}};const postData=async(endpoint,formData,method)=>{try{const response=await fetch(\"\".concat(renderUrl,\"/\").concat(endpoint),{method:method,headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const data=await response.json();// Traitez la réponse si nécessaire\nconsole.log('Données envoyées avec succès:',data);return data;}catch(error){console.error('Erreur lors de l\\'envoi des données:',error);return error;}};const deleteItem=async id=>{try{// Envoyer la requête DELETE à votre API avec l'ID\nawait fetch(\"\".concat(renderUrl,\"/books/\").concat(id),{method:'DELETE'});// Mettre à jour l'état local (par exemple, en refetchant les données)\n// selectFeature(selectedCategory);\n}catch(error){console.error(\"Erreur lors de la suppression de l'\\xE9l\\xE9ment avec l'ID \".concat(id),error);}};const selectFeature=useCallback(feature=>{// Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\nconst endpoint=feature==='all'?'books':\"books/\".concat(feature);fetchData(endpoint,0);setCategory(feature);},[setCategory]);const getCategories=useCallback(()=>{// Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\nconst endpoint=\"books/categories\";fetchData(endpoint,3);},[]);const getYears=useCallback(()=>{// Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\nconst endpoint=\"books/years\";fetchData(endpoint,1);},[]);const getAuthors=useCallback(()=>{// Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\nconst endpoint=\"books/authors\";fetchData(endpoint,2);},[]);useEffect(()=>{selectFeature('all');// Charger les données par défaut au montage\ngetYears();getAuthors();getCategories();},[getAuthors,getCategories,getYears,selectFeature]);return/*#__PURE__*/_jsx(ApiContext.Provider,{value:{apiData,selectFeature,apiDatas,getCategories,selectedCategory,setCategory,apiYears,setBookYears,getYears,apiAuthors,setBookAuthors,getAuthors,//\npostData,deleteItem},children:children});};export const useApi=()=>useContext(ApiContext);","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useCallback","jsx","_jsx","ApiContext","API_URL","renderUrl","ApiProvider","_ref","children","apiData","setApiData","apiDatas","setApiDatas","apiYears","setBookYears","apiAuthors","setBookAuthors","selectedCategory","setSelectedCategory","setCategory","category","fetchData","endpoint","op","response","fetch","concat","data","json","Array","isArray","error","console","postData","formData","method","headers","body","JSON","stringify","log","deleteItem","id","selectFeature","feature","getCategories","getYears","getAuthors","Provider","value","useApi"],"sources":["C:/Users/asist/Desktop/Master 2/NoSQL/Project/Projet 1/Books Dataset for Recommendation Systems and Chatbots/work/Books-MEAN-App/client/src/context/ApiContext.js"],"sourcesContent":["// src/context/ApiContext.js\r\nimport { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\n\r\nconst ApiContext = createContext();\r\n\r\nconst API_URL = 'http://127.0.0.1:3000';\r\nconst renderUrl = 'https://books-mean-app.onrender.com';\r\n\r\nexport const ApiProvider = ({ children }) => {\r\n    const [apiData, setApiData] = useState([]);\r\n    const [apiDatas, setApiDatas] = useState([]);\r\n    const [apiYears, setBookYears] = useState([]);\r\n    const [apiAuthors, setBookAuthors] = useState([]);\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n\r\n    const setCategory = useCallback((category) => {\r\n        setSelectedCategory(category);\r\n    }, []);\r\n\r\n    const fetchData = async (endpoint, op) => {\r\n        try {\r\n            const response = await fetch(`${renderUrl}/${endpoint}`);\r\n            const data = await response.json();\r\n            // Ensure data is always an array\r\n            if(op === 0)\r\n                setApiData(Array.isArray(data) ? data : [data]);\r\n            else if(op === 1)\r\n                setBookYears(Array.isArray(data) ? data : [data]);\r\n            else if(op === 2)\r\n                setBookAuthors(Array.isArray(data) ? data : [data]);\r\n            else\r\n                setApiDatas(Array.isArray(data) ? data : [data]);\r\n        } catch (error) {\r\n            console.error('Erreur lors de la récupération des données API', error);\r\n            if(op === 0 )\r\n                setApiData([]);\r\n            else if(op === 1 )\r\n                setBookYears([]);\r\n            else if(op === 2 )\r\n                setBookAuthors([]);\r\n            else \r\n                setApiDatas([]);\r\n        }\r\n    };\r\n\r\n    const postData = async (endpoint, formData, method) => {\r\n        try {\r\n            const response = await fetch(`${renderUrl}/${endpoint}`, {\r\n                method: method,\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n            const data = await response.json();\r\n            // Traitez la réponse si nécessaire\r\n            console.log('Données envoyées avec succès:', data);\r\n            return data;\r\n        } catch (error) {\r\n            console.error('Erreur lors de l\\'envoi des données:', error);\r\n            return error;\r\n        }\r\n    };\r\n\r\n    const deleteItem = async (id) => {\r\n        try {\r\n            // Envoyer la requête DELETE à votre API avec l'ID\r\n            await fetch(`${renderUrl}/books/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            // Mettre à jour l'état local (par exemple, en refetchant les données)\r\n            // selectFeature(selectedCategory);\r\n        } catch (error) {\r\n            console.error(`Erreur lors de la suppression de l'élément avec l'ID ${id}`, error);\r\n        }\r\n    };\r\n\r\n    const selectFeature = useCallback((feature) => {\r\n        // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\r\n        const endpoint = feature === 'all' ? 'books' : `books/${feature}`;\r\n        fetchData(endpoint, 0);\r\n        setCategory(feature);\r\n    }, [setCategory]);\r\n\r\n    const getCategories = useCallback(() => {\r\n        // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\r\n        const endpoint =`books/categories`;\r\n        fetchData(endpoint, 3);\r\n    }, []);\r\n\r\n    const getYears = useCallback(() => {\r\n        // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\r\n        const endpoint =`books/years`;\r\n        fetchData(endpoint, 1);\r\n    }, []);\r\n\r\n    const getAuthors = useCallback(() => {\r\n        // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\r\n        const endpoint =`books/authors`;\r\n        fetchData(endpoint, 2);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        selectFeature('all'); // Charger les données par défaut au montage\r\n        getYears();\r\n        getAuthors();\r\n        getCategories();\r\n    }, [getAuthors, getCategories, getYears, selectFeature]);\r\n\r\n    return (\r\n        <ApiContext.Provider value={{ \r\n            apiData, selectFeature, \r\n            apiDatas, getCategories, \r\n            selectedCategory, setCategory,\r\n            apiYears, setBookYears, getYears,\r\n            apiAuthors, setBookAuthors, getAuthors,\r\n            //\r\n            postData, deleteItem\r\n        }}>\r\n            {children}\r\n        </ApiContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useApi = () => useContext(ApiContext);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
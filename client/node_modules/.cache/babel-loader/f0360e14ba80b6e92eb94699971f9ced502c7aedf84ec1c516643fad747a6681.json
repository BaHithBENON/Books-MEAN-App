{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asist\\\\Desktop\\\\Master 2\\\\NoSQL\\\\Project\\\\Projet 1\\\\Books Dataset for Recommendation Systems and Chatbots\\\\work\\\\client\\\\src\\\\components\\\\AddBook.js\",\n  _s = $RefreshSig$();\n// src/components/DetailsSection.js\nimport React, { useState, useEffect } from 'react';\nimport { useApi } from '../context/ApiContext';\nimport BookForm from './BookForm';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddBook = () => {\n  _s();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  let method = 'POST';\n  const {\n    setSelectedBook,\n    postData\n  } = useApi();\n  const [formData, setFormData] = useState(() => {\n    const bookParameter = searchParams.get('book');\n    return bookParameter ? JSON.parse(bookParameter) : {\n      isbn13: '',\n      isbn10: '',\n      title: '',\n      authors: '',\n      categories: '',\n      thumbnail: '',\n      description: '',\n      published_year: '',\n      average_rating: '',\n      num_pages: '',\n      ratings_count: ''\n    };\n  });\n\n  // Fonction pour mettre à jour le livre sélectionné\n  const handleBookSelect = book => {\n    setSelectedBook(book);\n  };\n\n  // Fonction pour traiter les données du formulaire\n  const handleFormSubmit = async formData => {\n    // Ajoutez ici la logique pour traiter les données du formulaire, par exemple, en les envoyant à votre backend\n    console.log(formData);\n    // Appel de la fonction postData pour envoyer les données du formulaire\n    await postData('books', formData);\n    // Réinitialisez le formulaire après la soumission si nécessaire\n    setFormData({\n      isbn13: '',\n      isbn10: '',\n      title: '',\n      authors: '',\n      categories: '',\n      thumbnail: '',\n      description: '',\n      published_year: '',\n      average_rating: '',\n      num_pages: '',\n      ratings_count: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"fw-bold\",\n      children: \"Ajouter un livre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 col-12 my-4\",\n        children: /*#__PURE__*/_jsxDEV(BookForm, {\n          initialFormData: formData,\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(AddBook, \"km69y0lSSGIODH+onbAjdlF0mfg=\", false, function () {\n  return [useLocation, useApi];\n});\n_c = AddBook;\nexport default AddBook;\nvar _c;\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"names":["React","useState","useEffect","useApi","BookForm","useLocation","jsxDEV","_jsxDEV","AddBook","_s","location","searchParams","URLSearchParams","search","method","setSelectedBook","postData","formData","setFormData","bookParameter","get","JSON","parse","isbn13","isbn10","title","authors","categories","thumbnail","description","published_year","average_rating","num_pages","ratings_count","handleBookSelect","book","handleFormSubmit","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialFormData","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/asist/Desktop/Master 2/NoSQL/Project/Projet 1/Books Dataset for Recommendation Systems and Chatbots/work/client/src/components/AddBook.js"],"sourcesContent":["// src/components/DetailsSection.js\r\nimport React, { useState, useEffect } from 'react'; \r\nimport { useApi } from '../context/ApiContext';\r\nimport BookForm from './BookForm';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst AddBook = () => {\r\n    const location = useLocation();\r\n    const searchParams = new URLSearchParams(location.search);\r\n    let method = 'POST';\r\n\r\n    const { setSelectedBook, postData } = useApi();\r\n    const [formData, setFormData] = useState(() => {\r\n        const bookParameter = searchParams.get('book');\r\n        return bookParameter ? JSON.parse(bookParameter) : {\r\n            isbn13: '',\r\n            isbn10: '',\r\n            title: '',\r\n            authors: '',\r\n            categories: '',\r\n            thumbnail: '',\r\n            description: '',\r\n            published_year: '',\r\n            average_rating: '',\r\n            num_pages: '',\r\n            ratings_count: '',\r\n        };\r\n    });\r\n\r\n    // Fonction pour mettre à jour le livre sélectionné\r\n    const handleBookSelect = (book) => {\r\n        setSelectedBook(book);\r\n    };\r\n\r\n    // Fonction pour traiter les données du formulaire\r\n    const handleFormSubmit = async (formData) => {\r\n        // Ajoutez ici la logique pour traiter les données du formulaire, par exemple, en les envoyant à votre backend\r\n        console.log(formData);\r\n        // Appel de la fonction postData pour envoyer les données du formulaire\r\n        await postData('books', formData);\r\n        // Réinitialisez le formulaire après la soumission si nécessaire\r\n        setFormData({\r\n            isbn13: '',\r\n            isbn10: '',\r\n            title: '',\r\n            authors: '',\r\n            categories: '',\r\n            thumbnail: '',\r\n            description: '',\r\n            published_year: '',\r\n            average_rating: '',\r\n            num_pages: '',\r\n            ratings_count: '',\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <div className=\"container py-5\">\r\n            <h4 className='fw-bold'>Ajouter un livre</h4>\r\n            {/* Ajoutez le formulaire ici */}\r\n            <div className='row'>\r\n                <div className='col-md-6 col-12 my-4'>\r\n                    <BookForm initialFormData={formData} onSubmit={handleFormSubmit} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddBook;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
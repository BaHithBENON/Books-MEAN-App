{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asist\\\\Desktop\\\\Master 2\\\\NoSQL\\\\Project\\\\Projet 1\\\\Books Dataset for Recommendation Systems and Chatbots\\\\work\\\\client\\\\src\\\\context\\\\ApiContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/ApiContext.js\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiContext = /*#__PURE__*/createContext();\nconst API_URL = 'http://127.0.0.1:3000';\nexport const ApiProvider = ({\n  children\n}) => {\n  _s();\n  const [apiData, setApiData] = useState([]);\n  const [apiDatas, setApiDatas] = useState([]);\n  const fetchData = async (endpoint, op) => {\n    try {\n      const response = await fetch(`${API_URL}/${endpoint}`);\n      const data = await response.json();\n      // Ensure data is always an array\n      setApiData(Array.isArray(data) ? data : [data]);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des données API', error);\n      setApiData([]);\n    }\n  };\n  useEffect(() => {\n    fetchData('books'); // Charger les données par défaut au montage\n  }, []);\n  const selectFeature = feature => {\n    // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\n    const endpoint = feature === 'all' ? 'books' : `books/${feature}`;\n    fetchData(endpoint);\n  };\n  const getCategories = feature => {\n    // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\n    const endpoint = `books/${feature}`;\n    fetchData(endpoint);\n  };\n  return /*#__PURE__*/_jsxDEV(ApiContext.Provider, {\n    value: {\n      apiData,\n      selectFeature\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(ApiProvider, \"uTWBeLWppuiNRUzxokkOUwkHgdc=\");\n_c = ApiProvider;\nexport const useApi = () => {\n  _s2();\n  return useContext(ApiContext);\n};\n_s2(useApi, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ApiProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ApiContext","API_URL","ApiProvider","children","_s","apiData","setApiData","apiDatas","setApiDatas","fetchData","endpoint","op","response","fetch","data","json","Array","isArray","error","console","selectFeature","feature","getCategories","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApi","_s2","$RefreshReg$"],"sources":["C:/Users/asist/Desktop/Master 2/NoSQL/Project/Projet 1/Books Dataset for Recommendation Systems and Chatbots/work/client/src/context/ApiContext.js"],"sourcesContent":["// src/context/ApiContext.js\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ApiContext = createContext();\r\n\r\nconst API_URL = 'http://127.0.0.1:3000';\r\n\r\nexport const ApiProvider = ({ children }) => {\r\n    const [apiData, setApiData] = useState([]);\r\n    const [apiDatas, setApiDatas] = useState([]);\r\n\r\n    const fetchData = async (endpoint, op) => {\r\n        try {\r\n            const response = await fetch(`${API_URL}/${endpoint}`);\r\n            const data = await response.json();\r\n            // Ensure data is always an array\r\n            setApiData(Array.isArray(data) ? data : [data]);\r\n        } catch (error) {\r\n            console.error('Erreur lors de la récupération des données API', error);\r\n            setApiData([]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData('books'); // Charger les données par défaut au montage\r\n    }, []);\r\n\r\n    const selectFeature = (feature) => {\r\n        // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\r\n        const endpoint = feature === 'all' ? 'books' : `books/${feature}`;\r\n        fetchData(endpoint);\r\n    };\r\n    const getCategories = (feature) => {\r\n        // Utilisez la fonctionnalité sélectionnée pour construire l'endpoint\r\n        const endpoint =`books/${feature}`;\r\n        fetchData(endpoint);\r\n    };\r\n\r\n    return (\r\n        <ApiContext.Provider value={{ apiData, selectFeature }}>\r\n            {children}\r\n        </ApiContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useApi = () => useContext(ApiContext);\r\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AAElC,MAAMO,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,EAAE,KAAK;IACtC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,IAAGS,QAAS,EAAC,CAAC;MACtD,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC;MACAT,UAAU,CAACU,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC,CAAC;IACnD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;MACtEZ,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZY,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,aAAa,GAAIC,OAAO,IAAK;IAC/B;IACA,MAAMX,QAAQ,GAAGW,OAAO,KAAK,KAAK,GAAG,OAAO,GAAI,SAAQA,OAAQ,EAAC;IACjEZ,SAAS,CAACC,QAAQ,CAAC;EACvB,CAAC;EACD,MAAMY,aAAa,GAAID,OAAO,IAAK;IAC/B;IACA,MAAMX,QAAQ,GAAG,SAAQW,OAAQ,EAAC;IAClCZ,SAAS,CAACC,QAAQ,CAAC;EACvB,CAAC;EAED,oBACIX,OAAA,CAACC,UAAU,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,OAAO;MAAEe;IAAc,CAAE;IAAAjB,QAAA,EAClDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE9B,CAAC;AAACxB,EAAA,CApCWF,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAsCxB,OAAO,MAAM4B,MAAM,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACK,UAAU,CAAC;AAAA;AAAC+B,GAAA,CAAtCD,MAAM;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}